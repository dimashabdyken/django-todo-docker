pipeline {
    agent any // Запускать pipeline на любом доступном агенте (в данном случае, на самом сервере Jenkins)

    stages {
        stage('Checkout Code') {
            steps {
                // Получаем код из вашего репозитория (Git)
                checkout scm
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Собираем Docker-образ. 'sh' выполняет команды Shell.
                    sh 'docker build -t django-todo-image:latest .'
                }
            }
        }

        stage('Run Django Tests') {
            steps {
                script {
                    // 1. Запускаем временный контейнер для тестов
                    sh 'docker run -d --name test-container django-todo-image:latest sh -c "sleep 60"'
                    
                    // 2. Выполняем тесты внутри запущенного контейнера
                    sh 'docker exec test-container python manage.py test'
                    
                    // 3. Останавливаем и удаляем контейнер после тестов
                    sh 'docker rm -f test-container'
                }
            }
        }
        
        stage('Deploy Application'){
            steps {
                script {
                    // 1. Остановка старых контейнеров (web и nginx)
                    // Это нужно, чтобы Docker Compose мог запустить их заново с новым образом.
                    echo "Stopping old containers..."
                    sh 'docker-compose stop web nginx'
                    sh 'docker-compose rm -f web nginx'

                    echo 'Cleaning up existing stack to avoid conflicts...'
                    sh 'docker-compose down --remove-orphans'
                    
                    echo 'Setting permissions for Nginx config...'
                    sh 'chmod -R 777 ./nginx'   
                    
                     // 2. Запуск новых контейнеров
                    // Docker Compose пересоздаст web и nginx, используя образ django-todo-image:latest,
                    // который был собран на этапе 'Build Docker Image'.
                    echo "Starting new containers..."
                    sh 'docker-compose up -d --force-recreate'
                    
                    // 3. Выполнение миграций (если были изменения в БД)
                    echo "Running database migrations..."
                    sh 'docker exec django_web python manage.py migrate --noinput'
                    
                    echo "Collecting static files for Nginx..."
                    sh 'docker exec django_web python manage.py collectstatic --noinput'

                    echo "Deployment completed successfully! New version is live."
                }
            }
        }
    }
}
